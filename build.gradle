plugins {
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java-library'
    id "io.freefair.lombok" version "6.1.0"
    id 'maven-publish'
    id 'signing'
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
}

group = 'software.crldev'
sourceCompatibility = '11'
setArchivesBaseName('elrond-spring-boot-starter-reactive')
setVersion('1.0.0')

repositories {
    mavenLocal()
    mavenCentral()
}

task javadocJar(type: Jar) {
    classifier('javadoc')
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    classifier('sources')
    from sourceSets.main.delombokTask
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name.set('Elrond Spring Boot Starter Reactive')
                description.set( 'A solution designed to ensure efficient integration with the Elrond Network in a Spring Boot Starter manner with Reactive an approach.')
                url.set('https://github.com/crldev-software/elrond-spring-boot-starter-reactive')
                licenses {
                    license {
                        name.set("MIT")
                        url.set("https://github.com/crldev-software/elrond-spring-boot-starter-reactive/blob/main/LICENSE")
                    }
                }
                developers {
                    developer {
                        id.set('carlo_stanciu')
                        name.set('Carlo Stanciu')
                        email.set('carlo@crldev.software')
                    }
                }
                scm {
                    connection.set('scm:git:git://github.com/crldev-software/elrond-spring-boot-starter-reactive.git')
                    developerConnection.set('scm:git:git://github.com/crldev-software/elrond-spring-boot-starter-reactive.git')
                    url.set('https://github.com/crldev-software/elrond-spring-boot-starter-reactive')
                }
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            username.set(System.getenv("OSSRH_USER"))
            password.set(System.getenv("OSSRH_PASSWORD"))
        }
    }
}

signing {
    def key = System.getenv("SIGNING_KEY")
    def password = System.getenv("SIGNING_PASSWORD")

    useInMemoryPgpKeys(key, password)
    sign publishing.publications.mavenJava
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '2.5.4'
    implementation group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: '2.5.4'

    implementation group: 'org.bouncycastle', name: 'bcmail-jdk15on', version: '1.69'
    implementation group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.69'
    implementation group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.69'
    implementation group: 'org.bouncycastle', name: 'bcprov-ext-jdk15on', version: '1.69'
    implementation group: 'org.bitcoinj', name: 'bitcoinj-core', version: '0.15.10'

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.5.4'
    testImplementation 'io.projectreactor:reactor-test:3.4.9'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
}

test {
    useJUnitPlatform()
}